name: Deploy to Production

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  # Test and build
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: |
          backend/package-lock.json
          frontend/package-lock.json

    - name: Install backend dependencies
      run: cd backend && npm ci

    - name: Install frontend dependencies
      run: cd frontend && npm ci

    - name: Lint backend
      run: cd backend && npm run lint

    - name: Lint frontend
      run: cd frontend && npm run lint

    - name: Build backend
      run: cd backend && npm run build

    - name: Build frontend
      run: cd frontend && npm run build

    - name: Test backend
      run: cd backend && npm test

  # Deploy to staging/preview (on PR)
  deploy-preview:
    needs: test
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy Frontend Preview (Vercel)
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend
        scope: ${{ secrets.VERCEL_ORG_ID }}

  # Deploy to production (on main push)
  deploy-production:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy Frontend to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}}
        vercel-args: '--prod'
        working-directory: ./frontend
        scope: ${{ secrets.VERCEL_ORG_ID }}

    - name: Deploy Backend to Railway
      uses: bervProject/railway-deploy@v1.3.1
      with:
        railway_token: ${{ secrets.RAILWAY_TOKEN }}
        service: ${{ secrets.RAILWAY_SERVICE }}

  # Health check after deployment
  health-check:
    needs: deploy-production
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Wait for deployment
      run: sleep 60

    - name: Health Check
      env:
        BACKEND_URL: ${{ secrets.BACKEND_URL }}
        FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
      run: |
        chmod +x scripts/health-check.sh
        ./scripts/health-check.sh

    - name: Notify on failure
      if: failure()
      uses: 8398a7/action-slack@v3
      with:
        status: failure
        text: 'ðŸš¨ Deployment health check failed!'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}